<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.confluent</groupId>
        <artifactId>rest-utils-parent</artifactId>
        <version>6.0.1</version>
    </parent>

    <artifactId>kafka-schema-registry-parent</artifactId>
    <packaging>pom</packaging>
    <name>kafka-schema-registry-parent</name>
    <version>LOCAL-SNAPSHOT</version>
    <organization>
        <name>Confluent, Inc.</name>
        <url>http://confluent.io</url>
    </organization>
    <url>http://confluent.io</url>
    <description>
        Schema Registry provides a RESTful interface for storing and retrieving versioned Avro
        schemas for use with Kafka.
    </description>

    <licenses>
        <license>
            <name>Confluent Community License</name>
            <url>http://www.confluent.io/confluent-community-license</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/confluentinc/schema-registry.git</connection>
        <developerConnection>scm:git:git@github.com:confluentinc/schema-registry.git</developerConnection>
        <url>https://github.com/confluentinc/schema-registry</url>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>core</module>
        <module>client</module>
        <module>schema-serializer</module>
        <module>avro-serializer</module>
        <module>json-serializer</module>
        <module>avro-data</module>
        <module>avro-converter</module>
        <module>package-schema-registry</module>
        <module>package-kafka-serde-tools</module>
        <module>maven-plugin</module>
        <module>avro-serde</module>
        <module>client-console-scripts</module>
        <module>schema-registry-console-scripts</module>
        <module>protobuf-converter</module>
        <module>protobuf-provider</module>
        <module>protobuf-serializer</module>
        <module>protobuf-serde</module>
        <module>json-schema-converter</module>
        <module>json-schema-provider</module>
        <module>json-schema-serializer</module>
        <module>json-schema-serde</module>
        <module>benchmark</module>
    </modules>

    <properties>
        <apache.directory.server.version>2.0.0-M22</apache.directory.server.version>
        <apache.directory.api.version>1.0.0-M33</apache.directory.api.version>
        <exec-maven-plugin.version>1.2.1</exec-maven-plugin.version>
        <podam.version>6.0.2.RELEASE</podam.version>
        <checkstyle.suppressions.location>checkstyle/suppressions.xml</checkstyle.suppressions.location>
        <kafka.connect.maven.plugin.version>0.11.1</kafka.connect.maven.plugin.version>
        <kotlin.version>1.4.0</kotlin.version>
        <json-schema.version>1.12.1</json-schema.version>
        <protobuf.version>3.11.4</protobuf.version>
        <wire.version>3.2.2</wire.version>
        <swagger.version>1.6.2</swagger.version>
        <spotbugs.plugin.version>4.0.0</spotbugs.plugin.version>
    </properties>

    <repositories>
        <repository>
            <id>confluent</id>
            <name>Confluent</name>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.wire</groupId>
                <artifactId>wire-schema</artifactId>
                <version>${wire.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-stdlib</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-guava</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.everit-org.json-schema</groupId>
                <artifactId>org.everit.json.schema</artifactId>
                <version>${json-schema.version}</version>
            </dependency>
            <dependency>
                <groupId>com.kjetland</groupId>
                <artifactId>mbknor-jackson-jsonschema_${kafka.scala.version}</artifactId>
                <version>${mbknor-jackson-jsonschema.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-stdlib</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>uk.co.jemos.podam</groupId>
                <artifactId>podam</artifactId>
                <version>${podam.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-core</artifactId>
                <version>${swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.validation</groupId>
                        <artifactId>validation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--children-->
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-json-serializer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-avro-data</artifactId>
                <version>${confluent.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-avro-converter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-serializer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-streams-avro-serde</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-protobuf-converter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-protobuf-provider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-protobuf-serializer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-protobuf-serializer</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-streams-protobuf-serde</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-connect-json-schema-converter</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-json-schema-provider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-json-schema-serializer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-streams-json-schema-serde</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>2.1.6</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.ws</groupId>
                <artifactId>jaxws-api</artifactId>
                <version>2.3.0</version>
            </dependency>

            <!-- Autonomic.ai - Add explicit version of rest-utils -->
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>rest-utils</artifactId>
                <version>${confluent.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.confluent</groupId>
                    <artifactId>kafka-connect-maven-plugin</artifactId>
                    <version>${kafka.connect.maven.plugin.version}</version>
                    <configuration>
                        <documentationUrl>https://docs.confluent.io/${project.version}/schema-registry/docs/connect.html</documentationUrl>
                        <sourceUrl>https://github.com/confluentinc/schema-registry</sourceUrl>
                        
                        <supportProviderName>${project.organization.name}</supportProviderName>
                        <supportSummary>Confluent supports the Avro Converter alongside community members as part of its Confluent Platform offering.</supportSummary>
                        <supportUrl>https://docs.confluent.io/current/</supportUrl>
                        <supportLogo>logos/confluent.png</supportLogo>
                        
                        <ownerUsername>confluentinc</ownerUsername>
                        <ownerType>organization</ownerType>
                        <ownerName>${project.organization.name}</ownerName>
                        <ownerUrl>https://confluent.io/</ownerUrl>
                        <ownerLogo>logos/confluent.png</ownerLogo>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro-maven-plugin</artifactId>
                    <version>${avro.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.os72</groupId>
                    <artifactId>protoc-jar-maven-plugin</artifactId>
                    <version>${protobuf.version}</version>
                    <executions>
                        <execution>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <protocVersion>${protobuf.version}</protocVersion>
                                <includeStdTypes>true</includeStdTypes>
                                <addSources>none</addSources>
                                <outputDirectory>src/test/java</outputDirectory>
                                <inputDirectories>
                                    <include>src/test/proto</include>
                                </inputDirectories>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Autonomic specific plugin -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>2.5.2</version>
                    <configuration>
                      <outputPaths>
                        <tar>${session.executionRootDirectory}/../docker_image/${docker.image-name}.tar</tar>
                      </outputPaths>
                      <from>
                        <image>${docker.pull.ecr.hostname}/au/java:11${docker.debug-tag-suffix}-${docker.base-image-version}</image>
                        <credHelper>ecr-login</credHelper>
                        <auth combine.self="override"></auth>
                      </from>
                      <container>
                        <workingDirectory>/home/au</workingDirectory>
                        <user>au:au</user>
                        <labels>
                          <source.sha>${git.commit.id}</source.sha>
                          <source.repo>${git.remote.origin.url}</source.repo>
                          <maintainer>${docker.image-maintainer}</maintainer>
                        </labels>
                      </container>
                    </configuration>
                    <executions>
                      <execution>
                        <id>imageTar</id>
                        <goals>
                          <goal>buildTar</goal>
                        </goals>
                        <phase>deploy</phase>
                      </execution>
                      <execution>
                        <id>image</id>
                        <goals>
                          <goal>build</goal>
                        </goals>
                        <phase>none</phase>
                      </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.plugin.version}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <excludeFilterFile>findbugs/findbugs-exclude.xml</excludeFilterFile>
                    <effort>Max</effort>
                    <threshold>Max</threshold>
                    <failOnError>true</failOnError>
                    <includeTests>false</includeTests>
                </configuration>
                <executions>
                    <!--
                    Ensures that FindBugs inspects source code when project is compiled.
                -->
                    <execution>
                        <id>analyze-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Autonomic specific plugin -->
            <!--
            <plugin>
                <groupId>org.jfrog.buildinfo</groupId>
                <artifactId>artifactory-maven-plugin</artifactId>
                <version>2.6.1</version>
                <executions>
                  <execution>
                    <id>build-info</id>
                    <goals>
                      <goal>publish</goal>
                    </goals>
                    <configuration>
                      <publisher>
                        <contextUrl>https://autonomic.jfrog.io/autonomic</contextUrl>
                        <repoKey>plugins-release-local</repoKey>
                        <snapshotRepoKey>plugins-snapshot-local</snapshotRepoKey>
                        <username>${env.ARTIFACT_REPO_USERNAME}</username>
                        <password>${env.ARTIFACT_REPO_PASSWORD}</password>
                      </publisher>
                      <deployProperties>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>${project.artifactId}</artifactId>
                        <version>${project.version}</version>
                      </deployProperties>
                    </configuration>
                  </execution>
                </executions>
            </plugin>
            -->
            <!-- Autonomic.ai - Following taken from com.autonomic:au-parent pom.xml
                FIXME : Should we take the one from com.autonomic:au-policy pom.xml
            -->
            <!--
              ~ https://www.mojohaus.org/versions-maven-plugin/index.html
              ~ check for direct dependency version updates
            -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>versions-maven-plugin</artifactId>
              <version>2.8.1</version>
              <executions>
                <execution>
                  <id>display-parent-updates</id>
                  <goals>
                    <goal>display-parent-updates</goal>
                  </goals>
                  <phase>validate</phase>
                </execution>
                <execution>
                  <id>display-dependency-updates</id>
                  <goals>
                    <goal>display-dependency-updates</goal>
                  </goals>
                  <phase>validate</phase>
                  <configuration>
                    <!-- only checking the dependencies section of the project -->
                    <processDependencies>true</processDependencies>
                    <processDependencyManagement>false</processDependencyManagement>
                    <processPluginDependencies>false</processPluginDependencies>
                    <processPluginDependenciesInPluginManagement>false</processPluginDependenciesInPluginManagement>
                  </configuration>
                </execution>
              </executions>
            </plugin>
        </plugins>

    </build>

    <profiles>
      <profile>
        <id>north-america</id>
        <activation>
          <property>
            <name>env.ARTIFACT_REPO_LOCATION</name>
            <value>na</value>
          </property>
        </activation>
        <properties>
          <artifactory.repoKey>libs-release-dev</artifactory.repoKey>
          <artifactory.snapshotRepoKey>libs-snapshot-dev</artifactory.snapshotRepoKey>
          <artifactory.excludePatterns>*-exec.jar</artifactory.excludePatterns>
          <docker.pull.hostname>autonomic-docker.jfrog.io</docker.pull.hostname>
          <docker.pull.ecr.hostname>422443434606.dkr.ecr.us-west-2.amazonaws.com</docker.pull.ecr.hostname>
          <jib.docker.hostname>autonomic-docker-dev.jfrog.io</jib.docker.hostname>
          <docker.hostname>autonomic-docker-dev.jfrog.io</docker.hostname>
          <sonar.host.url>${env.SONAR_URL}</sonar.host.url>
          <dependency-analyzer.internal.url>${env.DEPENDENCY_ANALYZER_URL}</dependency-analyzer.internal.url>
        </properties>
        <build>
          <plugins>
            <plugin>
              <groupId>org.jfrog.buildinfo</groupId>
              <artifactId>artifactory-maven-plugin</artifactId>
              <version>2.6.1</version>
              <executions>
                <execution>
                  <id>build-info</id>
                  <goals>
                    <goal>publish</goal>
                  </goals>
                  <configuration>
                    <publisher>
                      <contextUrl>https://autonomic.jfrog.io/autonomic</contextUrl>
                      <repoKey>${artifactory.repoKey}</repoKey>
                      <snapshotRepoKey>${artifactory.snapshotRepoKey}</snapshotRepoKey>
                      <username>${env.ARTIFACT_REPO_USERNAME}</username>
                      <password>${env.ARTIFACT_REPO_PASSWORD}</password>
                      <excludePatterns>${artifactory.excludePatterns}</excludePatterns>
                      <filterExcludedArtifactsFromBuild>true</filterExcludedArtifactsFromBuild>
                      <publishBuildInfo>false</publishBuildInfo>
                    </publisher>
                    <deployProperties>
                      <groupId>${project.groupId}</groupId>
                      <artifactId>${project.artifactId}</artifactId>
                      <version>${project.version}</version>
                    </deployProperties>
                    <buildInfo>
                      <buildNumber>${build-number}</buildNumber>
                    </buildInfo>
                    <licenses>
                      <autoDiscover>true</autoDiscover>
                    </licenses>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
      </profile>
    </profiles>
</project>
